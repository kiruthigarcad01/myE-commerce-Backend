generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Admin {
  id           Int       @id @default(autoincrement())
  username     String
  emailAddress String    @unique
  password     String
  products     Product[]
}

model Product {
  id            Int         @id @default(autoincrement())
  name          String
  description   String
  category      String
  price         Float
  rating        Float
  seller        String
  stock         Int
  image         Bytes?      @map("image") @db.LongBlob
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  adminId       Int
  admin         Admin       @relation(fields: [adminId], references: [id])
  wishlistItems Wishlist[]  @relation("ProductWishlistItems")
  cartItems     CartItem[]  @relation("ProductCartItems")
  orderItems    OrderItem[] @relation("ProductOrderItems")
}


model Wishlist {
  id         Int      @id @default(autoincrement())
  customer   Customer @relation(fields: [customerId], references: [id])
  customerId Int
  product    Product  @relation("ProductWishlistItems", fields: [productId], references: [id])
  productId  Int
  createdAt  DateTime @default(now())

  @@unique([customerId, productId])
}

model Cart {
  id         Int        @id @default(autoincrement())
  customer   Customer   @relation(fields: [customerId], references: [id])
  customerId Int        @unique
  items      CartItem[]
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
}

model CartItem {
  id        Int     @id @default(autoincrement())
  cart      Cart    @relation(fields: [cartId], references: [id])
  cartId    Int
  product   Product @relation("ProductCartItems", fields: [productId], references: [id])
  productId Int
  quantity  Int     @default(1)
}

model Order {
  id         Int         @id @default(autoincrement())
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  customer   Customer    @relation(fields: [customerId], references: [id])
  customerId Int
  products   OrderItem[] @relation("OrderProducts")
  status     String      @default("Pending")
}


model OrderItem {
  id        Int     @id @default(autoincrement())
  order     Order   @relation("OrderProducts", fields: [orderId], references: [id])
  orderId   Int
  product   Product @relation("ProductOrderItems", fields: [productId], references: [id])
  productId Int
}

model Customer {
  id              Int        @id @default(autoincrement())
  username        String     @default("Unknown")
  age             Int        @default(0)
  emailAddress    String     @unique
  country         String     @default("Unknown")
  phoneNumber     Int        @unique
  location        String     @default("Unknown")
  password        String
  dateOfBirth     DateTime   @default(now())
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt
  Cart            Cart?
  Wishlist        Wishlist[]
  Order           Order[]
  confirmPassword String?    @ignore
}
